name: CD

on:
  push:
    branches:
      - main
    tags:
      - "*"

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  tag:
    name: Tag
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: "[Checkout] repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "[Setup] Go"
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: "[Setup] svu"
        run: go install github.com/caarlos0/svu@latest

      - name: "[CD] release"
        if: github.ref == 'refs/heads/main'
        run: |
          git fetch --tags --force
          [ $(svu current) == $(svu next) ] || gh release create $(svu next)
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: "[Checkout] repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "[Setup] Go"
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: "[Setup] qemu"
        uses: docker/setup-qemu-action@v3

      - name: "[Setup] buildx"
        uses: docker/setup-buildx-action@v3

      - name: "[Setup] ghcr login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}

      - name: "[Setup] Syft" 
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: "[Setup] Cosign" 
        uses: sigstore/cosign-installer@v3.7.0
      
      - name: "[Setup] Cosign key"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: echo "${COSIGN_PRIVATE_KEY}" > cosign.key

      - name: "[Release] Run GoReleaser"
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
